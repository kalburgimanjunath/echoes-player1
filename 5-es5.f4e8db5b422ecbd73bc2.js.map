{"version":3,"sources":["webpack:///src/app/containers/user/index.ts","webpack:///src/app/containers/user/user.component.ts","webpack:///src/app/containers/user/user.component.ts.UserComponent.html","webpack:///src/app/containers/user/user-player.service.ts","webpack:///src/app/containers/user/playlists/playlists.component.ts","webpack:///src/app/containers/user/playlists/playlists.component.ts.PlaylistsComponent.html","webpack:///src/app/containers/user/user.guard.ts"],"names":["UserModule","user_component_UserComponent","appApi","store","this","playlists$","select","user_profile_selectors","c","currentPlaylist$","d","isSignedIn$","a","signinUser","_l","core","_v","en","$event","ad","_co","component","icon_directive_ngfactory","b","icon_directive","ElementRef","Renderer2","name","_ck","app_navbar_component_ngfactory","app_navbar_component","authorization_service","app_api","header","headerIcon","View_UserComponent_1","common","NgIf","ViewContainerRef","TemplateRef","ngIf","AsyncPipe","ChangeDetectorRef","router","p","ComponentFactoryResolver","transform","user_player_service_UserPlayerService","nowPlaylistService","userProfile","playlist","fetchPlaylistItems","id","subscribe","items","dispatch","now_playlist","h","updateIndexByMedia","app_player","media","g","n","PlaylistsComponent","userPlayerService","state","user","playlists","playSelectedPlaylist","queuePlaylist","youtube_playlist_ngfactory","youtube_playlist","link","play","queue","context","$implicit","View_PlaylistsComponent_1","NgForOf","IterableDiffers","ngForOf","AuthGuard","authorization","route","url","checkLogin","canActivate","isSignIn","navigate"],"mappings":"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","file":"5-es5.f4e8db5b422ecbd73bc2.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '@shared/index';\r\nimport { AppNavbarModule } from '../app-navbar';\r\n\r\nimport { PlaylistViewModule } from '../playlist-view'\r\n\r\nimport { UserComponent } from './user.component';\r\nimport { PlaylistsComponent } from './playlists';\r\n// import { PlaylistViewComponent, PlaylistResolver, PlaylistVideosResolver } from '@shared/components/playlist-view';\r\n\r\nimport { AuthGuard } from './user.guard';\r\nimport { UserPlayerService } from './user-player.service';\r\nimport { routing } from './user.routing';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    AppNavbarModule,\r\n    PlaylistViewModule,\r\n    routing\r\n  ],\r\n  declarations: [\r\n    UserComponent,\r\n    PlaylistsComponent\r\n  ],\r\n  exports: [\r\n    UserComponent\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    UserPlayerService,\r\n    // PlaylistResolver,\r\n    // PlaylistVideosResolver\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { EchoesState } from '@core/store';\r\n\r\nimport * as UserProfile from '@core/store/user-profile/user-profile.selectors';\r\nimport { AppApi } from '@api/app.api';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./user.scss'],\r\n  template: `\r\n  <article>\r\n    <app-navbar\r\n      [header]=\"'My Profile - My Playlists'\"\r\n      [headerIcon]=\"'heart-o'\"\r\n    ></app-navbar>\r\n    <p *ngIf=\"!(isSignedIn$ | async)\" class=\"well lead\">\r\n      To view your playlists in youtube, you need to sign in.\r\n      <button class=\"btn btn-lg btn-primary\"\r\n        (click)=\"signInUser()\">\r\n        <icon name=\"google\"></icon> Sign In\r\n      </button>\r\n    </p>\r\n    <router-outlet></router-outlet>\r\n  </article>\r\n  `\r\n})\r\nexport class UserComponent implements OnInit {\r\n  playlists$ = this.store.select(UserProfile.getUserPlaylists);\r\n  currentPlaylist$ = this.store.select(UserProfile.getUserViewPlaylist);\r\n  isSignedIn$ = this.store.select(UserProfile.getIsUserSignedIn);\r\n\r\n  constructor(private appApi: AppApi, public store: Store<EchoesState>) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  signInUser() {\r\n    this.appApi.signinUser();\r\n  }\r\n}\r\n","\n  <article>\n    <app-navbar\n      [header]=\"'My Profile - My Playlists'\"\n      [headerIcon]=\"'heart-o'\"\n    ></app-navbar>\n    <p *ngIf=\"!(isSignedIn$ | async)\" class=\"well lead\">\n      To view your playlists in youtube, you need to sign in.\n      <button class=\"btn btn-lg btn-primary\"\n        (click)=\"signInUser()\">\n        <icon name=\"google\"></icon> Sign In\n      </button>\n    </p>\n    <router-outlet></router-outlet>\n  </article>\n  ","import { Store } from '@ngrx/store';\r\nimport { Injectable } from '@angular/core';\r\nimport { YoutubePlayerService, NowPlaylistService, UserProfile } from '@core/services';\r\nimport { EchoesState } from '@core/store';\r\nimport * as NowPlaylist from '@core/store/now-playlist';\r\nimport * as AppPlayer from '@core/store/app-player';\r\n\r\n@Injectable()\r\nexport class UserPlayerService {\r\n  constructor(\r\n    private nowPlaylistService: NowPlaylistService,\r\n    private userProfile: UserProfile,\r\n    private store: Store<EchoesState>\r\n  ) { }\r\n\r\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userProfile\r\n      .fetchPlaylistItems(playlist.id, '')\r\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\r\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\r\n        this.nowPlaylistService.updateIndexByMedia(items[0].id);\r\n        this.store.dispatch(new AppPlayer.LoadAndPlay(items[0]));\r\n      });\r\n  }\r\n\r\n  queuePlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userProfile\r\n      .fetchPlaylistItems(playlist.id, '')\r\n      .subscribe((items: GoogleApiYouTubeVideoResource[]) => {\r\n        this.store.dispatch(new NowPlaylist.QueueVideos(items));\r\n        return items;\r\n      });\r\n  }\r\n\r\n  queueVideo(media: GoogleApiYouTubeVideoResource) {\r\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\r\n  }\r\n\r\n  playVideo(media: GoogleApiYouTubeVideoResource) {\r\n    this.store.dispatch(new AppPlayer.LoadAndPlay(media));\r\n    this.store.dispatch(new NowPlaylist.QueueVideo(media));\r\n    this.store.dispatch(new NowPlaylist.SelectVideo(media));\r\n  }\r\n}\r\n","import { UserPlayerService } from '../user-player.service';\r\nimport { EchoesState } from '@core/store';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Component({\r\n  selector: 'playlists',\r\n  template: `\r\n  <section class=\"videos-list\">\r\n    <div class=\"list-unstyled ux-maker youtube-items-container clearfix\">\r\n      <youtube-playlist\r\n        *ngFor=\"let playlist of playlists$ | async\"\r\n        [media]=\"playlist\"\r\n        link=\"/user/\"\r\n        (play)=\"playSelectedPlaylist(playlist)\"\r\n        (queue)=\"queueSelectedPlaylist(playlist)\">\r\n      </youtube-playlist>\r\n    </div>\r\n  </section>\r\n  `\r\n})\r\nexport class PlaylistsComponent implements OnInit {\r\n  playlists$ = this.store.select(state => state.user.playlists);\r\n\r\n  constructor(\r\n    private store: Store<EchoesState>,\r\n    private userPlayerService: UserPlayerService\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  playSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userPlayerService.playSelectedPlaylist(playlist);\r\n  }\r\n\r\n  queueSelectedPlaylist(playlist: GoogleApiYouTubePlaylistResource) {\r\n    this.userPlayerService.queuePlaylist(playlist);\r\n  }\r\n}\r\n","\n  <section class=\"videos-list\">\n    <div class=\"list-unstyled ux-maker youtube-items-container clearfix\">\n      <youtube-playlist\n        *ngFor=\"let playlist of playlists$ | async\"\n        [media]=\"playlist\"\n        link=\"/user/\"\n        (play)=\"playSelectedPlaylist(playlist)\"\n        (queue)=\"queueSelectedPlaylist(playlist)\">\n      </youtube-playlist>\n    </div>\n  </section>\n  ","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { Authorization } from '@core/services';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n  constructor(private authorization: Authorization, private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    // console.log('AuthGuard#canActivate called', { state });\r\n    const url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  checkLogin(url: string): boolean {\r\n    if (this.authorization.isSignIn()) { return true; }\r\n\r\n    // Store the attempted URL for redirecting\r\n    // this.authService.redirectUrl = url;\r\n\r\n    // Navigate to the login page with extras\r\n    this.router.navigate(['/user']);\r\n    return false;\r\n  }\r\n}\r\n"]}